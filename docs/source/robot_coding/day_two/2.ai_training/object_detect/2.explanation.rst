Overall Explanation
=======================


Overview
---------

With the previous lectures, we looked at different ways to recognize object wihtin 
an images. Within Image Recognition system, there are some serious problems.

1. The image recognition system cannot locate where the recognized object is within the picture. 
2. It has difficulty when it comes to multiple objects within one picture. 

Object Detection system allows for solutions for all the downside the Image Recognition system may have.
It allows for object detection and object recognition all at the same time, which allows the model
to recognize and detect multiple objects at the same time. 

The Object Detection system used for our system recieves an image as an input, and outputs a list of coordinates
of the detected bounding boxes along with their classes and confidence values. With our follow along 
example we used SSD-Mobile-v2 model which can detect 91 different classes and was trained on 
MS COCO dataset. 

Having object detection system allows for many different applications ranging from intrusion detections, inventory management,
foot traffic analysis and so on. 


SSD-Mobilenet-v2
-----------------

When it comes to most of the object detection models, there are two different categorization:

1. one (single) stage object detectors 
2. two (dual) stage object detectors

The difference between the two is that two (dual) stage object detectors first detect where the 
object is within the image, and then carries out classification only on the detected region. This 
yields much higher accuracy, but it leads to more computational resources and slower computational
time. Example:

- a: Single stage object detector 
- b: Dual stage object detector

.. thumbnail:: /_images/ai_training/ssd.webp


The SSD-Mobilenet-v2 is a one-stage object detection model. Because
the one-stage object detection merges the detection and recognition
stage, it is much faster, light and requires less computational power.

Other models for Object Detection
------------------------------------

With the jetson-inference examples, other pre-trained detection models are available:

.. list-table:: 
    :header-rows: 1

    * - Model
      - CLI argument
      - NetworkType enum
      - Object classes
    * - SSD-Mobilenet-v1
      - ``ssd-mobilenet-v1``
      - ``SSD_MOBILENET_V1``
      - 91 (COCO classes)
    * - SSD-Mobilenet-v2
      - ``ssd-mobilenet-v2``
      - ``SSD_MOBILENET_V2``
      - 91 (COCO classes)
    * - SSD-Inception-v2
      - ``ssd-inception-v2``
      - ``SSD_INCEPTION_V2``
      - 91 (COCO classes)
    * - DetectNet-COCO-Dog
      - ``coco-dog``
      - ``COCO_DOG``
      - dogs
    * - DetectNet-COCO-Bottle
      - ``coco-bottle``
      - ``COCO_BOTTLE``
      - bottles
    * - DetectNet-COCO-Chair
      - ``coco-chair``
      - ``COCO_CHAIR``
      - chair
    * - DetectNet-COCO-Airplane
      - ``coco-airplane``
      - ``COCO_AIRPLANE``
      - airplane
    * - ped-100
      - ``pednet``
      - ``PEDNET``
      - pedestrians
    * - multiped-500
      - ``multiped``
      - ``PEDNET_MULTI``
      - pedestrians, luggage
    * - facenet-120
      - ``facenet``
      - ``FACENET``
      - faces
