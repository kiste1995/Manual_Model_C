==================
Robot Arm teaching
==================

.. raw:: html
    
    <div style="background: #C3F8FF" class="admonition note custom">
        <p style="background: light-blue" class="admonition-title">
            Follow along: Robot Arm Movement Retention Example
        </p>
        <div class="line-block">
            <div class="line">The program launching process along with parameter settings are all simplified and set up on the Jupyter Notebook Environment.</div>
            <div class="line">The robot arm is able to retain an change in the robot arm position as a movement. This example shows how the movement teaching process is conducted.</div>
        </div>
        <ul>
            <li>Open the 05_05_study_mode.ipynb Jupyter Notebook</li>
            <li>Load Arm_Lib module and register the robot arm as an object</li>
            <li>Follow and Execute the example codes</li>

        </ul>
        <div class="line">(The Jetson Board used for these examples are => Jetson Nano)</div>
        
    </div>


.. raw:: html

    <hr>

-   05_05_study_mode.ipynb
-   | Running the cell code
    | `Ctrl + Enter`

.. thumbnail:: /_images/having_fun/teaching1.png

|

-   To make sure that no other program is using the robot arm, turn off the joy stick control and allow for robot arm to be controlled:

.. code-block:: python 

    %%capture
    !pm2 stop 14
    !pm2 start 15

-   Load Arm_Lib module and register the robot arm as an object

.. code-block:: python

    #!/usr/bin/env python3
    #coding=utf-8
    import time
    from Arm_Lib import Arm_Device

    Arm = Arm_Device()
    time.sleep(.1)


-   Robot arm teaching and learned motion execution


.. code-block:: python

    # If you use the learning mode, the torque of the robot arm is released and it can move.
    # In learning mode, you can manually control the robot arm.
    Arm.Arm_Button_Mode(1)
    

.. code-block:: python

    # This is where you register your learning.
    # Whenever the arm is moved and executed, the motion is registered. (20 motions)
    Arm.Arm_Action_Study()


.. code-block:: python

    # Exit learning mode.
    Arm.Arm_Button_Mode(0)


.. code-block:: python

    # Indicates the number of stored lessons.
    num = Arm.Arm_Read_Action_Num()
    print(num)


.. code-block:: python

    # Execute the learned motion once.
    Arm.Arm_Action_Mode(1)


.. code-block:: python

    # Repeat the learned motion.
    Arm.Arm_Action_Mode(2)

.. code-block:: python

    # Stop motion (learned motion).
    Arm.Arm_Action_Mode(0)


.. code-block:: python 

    # Initialize the learned motion.
    Arm.Arm_Clear_Action()


-   Remove the robot arm object 


.. code-block:: python

    del Arm  # Release DOFBOT object


-   Reset the Robot Arm control

.. code-block:: python 

    %%capture
    !pm2 stop 15
    !pm2 start 14