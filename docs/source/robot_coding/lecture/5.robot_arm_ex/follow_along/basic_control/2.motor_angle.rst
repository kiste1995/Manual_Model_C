======================
Read Servo Motor Angle
======================

.. raw:: html
    
    <div style="background: #C3F8FF" class="admonition note custom">
        <p style="background: light-blue" class="admonition-title">
            Follow along: Read Servo Motor Angle
        </p>
        <div class="line-block">
            <div class="line">The program launching process along with parameter settings are all simplified and set up on the Jupyter Notebook Environment.</div>
            <div class="line">This example allows us to check the current angle of each of the servo motors</div>
        </div>
        <ul>
            <li>Open the 05_02_read_servo.ipynb Jupyter Notebook</li>
            <li>Load Arm_Lib module and register the robot arm as an object</li>
            <li>Follow and Execute the example codes</li>

        </ul>
        <div class="line">(The Jetson Board used for these examples are => Jetson Nano)</div>
        
    </div>


.. raw:: html

    <hr>

-   05_02_read_servo.ipynb
-   | Running the cell code
    | `Ctrl + Enter`

.. thumbnail:: /_images/having_fun/rob_arm1.png

|

-   To make sure that no other program is using the robot arm, turn off the joy stick control and allow for robot arm to be controlled:

.. code-block:: python 

    %%capture
    !pm2 stop 14
    !pm2 start 15


-   Load Arm_Lib module and register the robot arm as an object

.. code-block:: python

    #!/usr/bin/env python3
    #coding=utf-8
    import time
    from Arm_Lib import Arm_Device

    # Register robot arm as an object
    Arm = Arm_Device()
    time.sleep(.1)


-   Arm_serial_servo_read (motor number)
-   Read all servo motor angles using while statement

.. code-block:: python

    # Read the angles of all servos.
    def main():

        while True:
            for i in range(6):
                aa = Arm.Arm_serial_servo_read(i+1)
                print(aa)
                time.sleep(.01)
            time.sleep(.5)
            print(" END OF LINE! ")

        
    try :
        main()
    except KeyboardInterrupt:
        print(" Program closed! ")
        pass


-   Arm_serial_servo_write (motor number, angle, time)
-   Read angle after controlling servo motor No. 3

.. code-block:: python

    # After individually controlling the movement of the servos, the angle is read.
    id = 3
    angle = 41

    Arm.Arm_serial_servo_write(id, angle, 500)
    time.sleep(1)

    aa = Arm.Arm_serial_servo_read(id)
    print(aa)

    time.sleep(.5)


-   Remove the robot arm object 

.. code-block:: python

    del Arm  # Remove robot arm object

-   Reset the Robot Arm control

.. code-block:: python 

    %%capture
    !pm2 stop 15
    !pm2 start 14
